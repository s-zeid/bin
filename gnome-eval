#!/usr/bin/env python3

# Thanks to Aleksandar Jovanov:
# <http://aleksandarjovanov.blogspot.com/2012/10/having-fun-with-gnome-shell.html>

import os
import sys

from typing import *

import dbus  # type: ignore


class ShellJSError(RuntimeError):
 pass


def gnome_shell_eval(js: str, dir: bool = False) -> str:
 if dir:
  js = """(function(obj) {
   let result = [];
   for (let prop in obj) {
    result.push(prop);
   };
   result.sort();
   return result;
  })(%s);""" % (js or "globalThis")
 
 bus = dbus.SessionBus()
 Shell = bus.get_object("org.gnome.Shell", "/org/gnome/Shell")
 success, result = Shell.Eval(js, dbus_interface="org.gnome.Shell")
 if not success:
  if not result:
   result = "unsafe mode disabled; to enable, press Alt+F2, run `lg`, then run `global.context.unsafe_mode = true;`"
  raise ShellJSError(result)
 return result


def main(argv: List[str]) -> int:
 if not (len(argv) == 2 or (len(argv) == 3 and argv[1] in ("-d", "--dir"))):
  prog = os.path.basename(argv[0])
  print("Usage: %s [-d|--dir] {js, or - to read from stdin}" % prog, file=sys.stderr)
  return 2
 
 dir = argv[1] in ("-d", "--dir")
 js_arg = argv[1] if not dir else (argv[2] if len(argv) > 2 else "")
 
 js = sys.stdin.read() if js_arg == "-" else js_arg
 try:
  print(gnome_shell_eval(js, dir))
  return 0
 except ShellJSError as exc:
  print("JS error: %s" % exc, file=sys.stderr)
  return 1


if __name__ == "__main__":
 try:
  sys.exit(main(sys.argv))
 except KeyboardInterrupt:
  pass
