#!/usr/bin/env python2

# apic-extract
# Extracts album art from an MP3 file.
# 
# Copyright (c) 2012 S. Zeid.
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
# 
# 
# EXCEPTION:  Any modified version of this program, or any portion or modified
# portion of this program, which does not use the Mutagen audio tagging library
# may (at your option) be used under the following X11 License instead of the
# GNU General Public License:
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
# 
# Except as contained in this notice, the name(s) of the above copyright holders
# shall not be used in advertising or otherwise to promote the sale, use or
# other dealings in this Software without prior written authorization.


""" Extracts album art from an MP3 file.  Album art is assumed to be in JPEG format.  Only the first artwork found is extracted.

    Usage: apic-extract mp3-filename [jpg-filename]
    (the default value for jpg-filename is "albumart.jpg")

    Dependencies: mutagen.mp3

    You can also import this as a module (rename it first?) and call
    apic_extract yourself.

"""


import os
import sys

import mutagen.mp3

def apic_extract(mp3, jpg=None):
 """Extracts album art from a given MP3 file.  Output is raw JPEG data.

jpg (optional) specifies a filename to write the image to instead of returning
it.  Returns True if this is specified.

If more than one artwork frame exists, then only the first one encountered will
be used.

Returns False if mp3 can't be opened, and None if no art was found.

"""
 try:
  tags = mutagen.mp3.Open(mp3)
 except:
  return False
 data = ""
 for i in tags:
  if i.startswith("APIC"):
   data = tags[i].data
   break
 if not data:
  return None
 if jpg != None:
  out = open(jpg, "w")
  out.write(data)
  out.close()
  return True
 return data

def main(argv):
 if len(argv) < 2 or len(argv) > 3:
  print >> sys.stderr, "Usage: %s mp3-filename [jpg-filename]" % argv[0]
  print >> sys.stderr, "(the default value for jpg-filename is \"albumart.jpg\")"
  return 2
 mp3_filename = argv[1]
 jpg_filename = "albumart.jpg"
 if len(argv) == 3:
  jpg_filename = argv[2]
 status = apic_extract(mp3_filename, jpg_filename)
 if status == False:
  print >> sys.stderr, ("\"%s\" could not be opened or is not a valid MP3 file"
                        % mp3_filename)
  return 1
 elif status == None:
  print >> sys.stderr, "\"%s\" does not contain artwork" % mp3_filename
  return 3

if __name__ == "__main__":
 try:
  sys.exit(main(sys.argv))
 except KeyboardInterrupt:
  pass
