#!/bin/sh

# Copyright (c) 2014-2016 Scott Zeid.
# Released under the X11 License:  <https://tldrlegal.com/l/x11>

DEFAULT_USER=root

usage() {
 echo "Usage: $0 \\"
 echo "         <apk> [<user>@]<device address>[:<port>][,...] [-U] [<pm options> [...]]"
 echo ""
 echo "Notes:"
 echo " * <user> defaults to \`$DEFAULT_USER\`)"
 echo " * pm options that take values should be given after the device address"
 echo " * \`-U\` means to uninstall first, DELETING the app's data and cache,"
 echo "   and requires \`aapt\` to be on your \$PATH"
}

if [ -z "$1" -o -z "$2" ]; then
 usage >&2
 exit 2
fi

# Reorder arguments - public domain via CC0
reorder_args_cmd() {
 # if not 0, then excess positional arguments will be treated as flags
 local positional_max=2
 
 local positional=
 local flags=
 local n=1
 local arg=
 local n_positional=0
 while [ $n -le $# ]; do
  eval "arg=\$$n"
  if ([ $positional_max -gt 0 ] && [ $n_positional -ge $positional_max ]) || \
     (printf '%s' "$arg" | head -n 1 | grep -q -e '^-'); then
   flags="$flags \"\$$n\""
  else
   positional="$positional \"\$$n\""
   n_positional=$((n_positional + 1))
  fi
  n=$((n + 1))
 done
 printf '%s\n' "set -- $positional $flags"
}
eval "$(reorder_args_cmd "$@")"
# End of public domain reorder arguments snippet

APK="$1"
DEVICE="$2"
shift 2

UNINSTALL_NAME=
UNINSTALL_FIRST=0

# extract -U flag
PM_OPTIONS=
n=1
arg=
while [ $n -le $# ]; do
 eval "arg=\$$n"
 if [ x"$arg" = x"-U" ]; then
  UNINSTALL_FIRST=1
 else
  PM_OPTIONS="$PM_OPTIONS \"\$$n\""
 fi
 n=$((n + 1))
done
eval "set -- $PM_OPTIONS"

if [ $UNINSTALL_FIRST -ne 0 ]; then
 if (! which aapt >/dev/null 2>&1); then
  echo "error: -U requires \`aapt\` to be on your \$PATH" >&2
  exit 1
 fi
 UNINSTALL_NAME=$(aapt dump badging "$APK" \
                   | grep -e '^package:' | grep -o "name='[^']*" | sed -e "s/name='//")
fi

if (printf '%s' "$DEVICE" | grep -q -e ','); then
 for i in $(printf '%s' "$DEVICE" | sed -e 's/,/ /g'); do
  "$0" "$APK" "$i" "$@"
 done
 exit $?
fi

if (printf '%s' "$DEVICE" | grep -q -e ':'); then
 PORT=$(printf '%s' "$DEVICE" | sed -e 's/[^:]*://g')
 DEVICE=$(printf '%s' "$DEVICE" | sed -e 's/:.*$//g')
else
 PORT=
fi

SCP_PORT=$([ x"$PORT" = x"" ] && true || printf '%s' "-P $PORT")
SSH_PORT=$([ x"$PORT" = x"" ] && true || printf '%s' "-p $PORT")

if (printf '%s' "$DEVICE" | grep -v -q -e '@'); then
 DEVICE="$DEFAULT_USER@$DEVICE"
fi

TMP_NAME=/sdcard/.install-apk.tmp.apk

echo_run() { echo '+' "$@"; "$@"; }

echo_run scp $SCP_PORT "$APK" "$DEVICE":"$TMP_NAME"
if [ $? -eq 0 ]; then
 if [ $UNINSTALL_FIRST -ne 0 ]; then
  echo_run ssh $SSH_PORT "$DEVICE" su root pm uninstall "$UNINSTALL_NAME"
 else
  true
 fi
fi
[ $? -eq 0 ] && echo_run ssh $SSH_PORT "$DEVICE" su root pm install -r "$@" "$TMP_NAME"
[ $? -eq 0 ] && echo_run ssh $SSH_PORT "$DEVICE" su root rm -f "$TMP_NAME"
