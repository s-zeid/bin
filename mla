#!/bin/sh

# XXX: Currently does not work

if [ $# -eq 0 ]; then
 echo "Usage: $0 [pandoc-options] input-file bibliography-file"
 echo "Output will be to input-file but with the extension changed to pdf"
 exit 2
fi

if [ "$1" = "-P" -o "$1" = "--preview" ]; then
 shift
 PREVIEW=1
else
 PREVIEW=0
fi

IN=
BIB=
set_cmd='set --'
n=1
for i; do
 # sort through remaining arguments
 if [ $n -eq `expr $# - 1` ]; then
  # second to last argument
  IN=$i
 elif [ $n -eq $# ]; then
  # last argument
  BIB=$i
 else
  # for other arguments, add ` "$n"` to $set_cmd, where n is the argument
  # number; this allows us to rearrange the argument list with a secure
  # eval expression
  set_cmd="$set_cmd \"\$$n\""
 fi
 n=`expr $n + 1`
done
eval "$set_cmd"
TEX="/tmp/$$-$(printf '%s' "$(basename "$IN")" | sed -r 's/(\.[^.]+)?$/.tex/')"
OUT=`printf '%s' "$IN" | sed -r 's/(\.[^.]+)?$/.pdf/'`

pandoc -t mla-paper --csl=mla-url "$@" "$IN" --bibliography="$BIB" -o "$TEX"
#pandoc --template=mla-paper --csl=mla-url "$@" "$IN" -o "$OUT"
pandoc "$@" "$TEX" -o "$OUT"

if [ $PREVIEW -eq 1 ]; then xdg-open "$OUT"; fi
