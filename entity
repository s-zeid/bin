#!/usr/bin/env python3

import argparse
import html.entities
import re
import sys

from typing import *


XML_ENTITY_NAME_RE = r"[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\U00010000-\U000EFFFF][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\U00010000-\U000EFFFF-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*"


def char2entity(char: str) -> str:
 return "&%s;" % html.entities.codepoint2name.get(ord(char), "#x%s" % hex(ord(char))[2:])


def entity2char(entity: str) -> Optional[str]:
 match = re.match(fr"^&?(#[0-9]+|#[xX][0-9a-fA-F]+|{XML_ENTITY_NAME_RE});?$", entity)
 if not match:
  return None
 entity = match[1]
 if re.match(r"^#([0-9]+)$", entity):
  return chr(int(entity[1:], 10))
 if re.match(r"^#[xX]([0-9a-fA-F]+)$", entity):
  return chr(int(entity[2:], 16))
 char = html.entities.html5.get(f"{entity};", None)
 return char or None


def main(argv: List[str]) -> int:
 p = argparse.ArgumentParser()
 p.add_argument("-x", "--code-point", "--hex", dest="code_point", action="store_true",
                help="show the version number and exit")
 p.add_argument("input", metavar="entity-or-char",
                help="the character to convert to an entity or"
                     " the entity to convert to a character")
 try:
  args = p.parse_args(argv[1:])
 except SystemExit as exc:
  return exc.code
 
 input_ = args.input
 mode   = (char2entity if len(input_) == 1 else entity2char)
 result = mode(input_)
 if result is None:
  print("error: invalid entity %s" % repr(input_), file=sys.stderr)
  return 1
 
 if args.code_point:
  if mode == char2entity:
   result = input_
  sys.stdout.write("U+" + re.sub(r"^0x", "", hex(ord(result))))
 else:
  sys.stdout.write(result)
 
 if sys.stdout.isatty():
  print()
 
 return 0


if __name__ == "__main__":
 try:
  sys.exit(main(sys.argv))
 except KeyboardInterrupt:
  pass
